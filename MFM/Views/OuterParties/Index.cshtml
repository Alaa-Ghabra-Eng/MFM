@using X.PagedList
@using X.PagedList.Mvc.Core

@model IPagedList<MFM.Models.OuterParty>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Description)
            </th>
            <th>
                Category 
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<hr />
@Html.PagedListPager(Model, page=>Url.Action("Index", new {page}), new X.PagedList.Web.Common.PagedListRenderOptions (){LiElementClasses = new string [] {"page-item"},PageClasses = new string[] { "page-link" },DisplayItemSliceAndTotal= true,ItemSliceAndTotalPosition=X.PagedList.Web.Common.ItemSliceAndTotalPosition.End})
